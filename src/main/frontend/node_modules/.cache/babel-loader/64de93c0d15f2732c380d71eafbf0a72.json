{"ast":null,"code":"var _jsxFileName = \"/Users/umerraja/All Cloud Drives /Google Drive/Study/Study Data/Programming/Repositories/Projects/defever-client/src/components/home/CovidWorld.js\";\nimport React, { useReducer } from 'react';\nimport '../Components.css';\nimport '../../App.css';\nimport GlobalStats from './covidWorld/GlobalStats';\nimport CountriesChart from './covidWorld/CountriesChart';\nimport SelectDataKey from './covidWorld/SelectDataKey';\nimport { useCoronaAPI } from './useCoronaAPI';\nimport HistoryChartGroup from './covidWorld/HistoryChartGroup';\nconst initialState = {\n  key: 'cases',\n  country: null,\n  lastDays: {\n    cases: 30,\n    deaths: 30,\n    recovered: 30\n  }\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'SET_KEY':\n      return { ...state,\n        key: action.key\n      };\n\n    case 'SET_COUNTRY':\n      return { ...state,\n        country: action.country\n      };\n\n    case 'SET_LASTDAYS':\n      return { ...state,\n        lastDays: { ...state.lastDays,\n          [action.key]: action.days\n        }\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport const AppDispatch = React.createContext(null);\n\nfunction CovidWorld() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const {\n    key,\n    country,\n    lastDays\n  } = state;\n  const globalStats = useCoronaAPI('/all', {\n    initialData: {},\n    refetchInterval: 10000\n  });\n  const countries = useCoronaAPI(`/countries?sort=${key}`, {\n    initialData: [],\n    converter: data => data.slice(0, 21)\n  });\n  const history = useCoronaAPI(`/historical/${country}`, {\n    initialData: {},\n    converter: data => data.timeline\n  });\n  return /*#__PURE__*/React.createElement(AppDispatch.Provider, {\n    value: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App pb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"bebas-font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"World COVID-19\"), /*#__PURE__*/React.createElement(GlobalStats, {\n    stats: globalStats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SelectDataKey, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CountriesChart, {\n    data: countries,\n    dataKey: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), country ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"bebas-font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"History for \", country), /*#__PURE__*/React.createElement(HistoryChartGroup, {\n    history: history,\n    lastDays: lastDays,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(\"small\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"bebas-font\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Click on a country bar to show it's history\"))));\n}\n\nexport default CovidWorld;","map":{"version":3,"sources":["/Users/umerraja/All Cloud Drives /Google Drive/Study/Study Data/Programming/Repositories/Projects/defever-client/src/components/home/CovidWorld.js"],"names":["React","useReducer","GlobalStats","CountriesChart","SelectDataKey","useCoronaAPI","HistoryChartGroup","initialState","key","country","lastDays","cases","deaths","recovered","reducer","state","action","type","days","AppDispatch","createContext","CovidWorld","dispatch","globalStats","initialData","refetchInterval","countries","converter","data","slice","history","timeline"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport '../Components.css';\n\nimport '../../App.css';\nimport GlobalStats from './covidWorld/GlobalStats';\nimport CountriesChart from './covidWorld/CountriesChart';\nimport SelectDataKey from './covidWorld/SelectDataKey';\nimport { useCoronaAPI } from './useCoronaAPI';\nimport HistoryChartGroup from './covidWorld/HistoryChartGroup';\n\nconst initialState = {\n  key: 'cases',\n  country: null,\n  lastDays: {\n    cases: 30,\n    deaths: 30,\n    recovered: 30,\n  },\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'SET_KEY':\n      return { ...state, key: action.key };\n    case 'SET_COUNTRY':\n      return { ...state, country: action.country };\n    case 'SET_LASTDAYS':\n      return {\n        ...state,\n        lastDays: { ...state.lastDays, [action.key]: action.days },\n      };\n    default:\n      return state;\n  }\n}\n\nexport const AppDispatch = React.createContext(null);\n\nfunction CovidWorld() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { key, country, lastDays } = state;\n\n  const globalStats = useCoronaAPI('/all', {\n    initialData: {},\n    refetchInterval: 10000,\n  });\n\n  const countries = useCoronaAPI(`/countries?sort=${key}`, {\n    initialData: [],\n    converter: (data) => data.slice(0, 21),\n  });\n\n  const history = useCoronaAPI(`/historical/${country}`, {\n    initialData: {},\n    converter: (data) => data.timeline,\n  });\n\n  return (\n    <AppDispatch.Provider value={dispatch}>\n      <div className=\"App pb-3\">\n        <h1 className=\"bebas-font\">World COVID-19</h1>\n        <GlobalStats stats={globalStats} />\n\n        <SelectDataKey />\n\n        <CountriesChart data={countries} dataKey={key} />\n\n        {country ? (\n          <div>\n            <h2 className=\"bebas-font\">History for {country}</h2>\n            <HistoryChartGroup history={history} lastDays={lastDays} />\n          </div>\n        ) : (\n          <small className=\"\">\n            <p className=\"bebas-font\">\n              Click on a country bar to show it's history\n            </p>\n          </small>\n        )}\n      </div>\n    </AppDispatch.Provider>\n  );\n}\n\nexport default CovidWorld;\n"]},"metadata":{},"sourceType":"module"}