{"ast":null,"code":"import axios from'axios';import Auth from'../services/Auth';var BASE_URL='/';var Api=axios.create({baseURL:BASE_URL});Api.interceptors.request.use(function(config){if(Auth.isLoggedIn()){var authHeader=Auth.getAuthorizationHeader();config.headers['common']['authorization']=authHeader;}return config;});Api.interceptors.response.use(function(r){return r;},function(err){if(err.response&&[401,403].indexOf(err.response.status)!==-1){Auth.logout();}return Promise.reject(err);});// Exporting Api into the global namespace for introspecting\nwindow.Api=Api;export default Api;","map":{"version":3,"sources":["/Users/umerraja/All Cloud Drives /Google Drive/Study/Study Data/Programming/Repositories/Projects/defever/src/main/frontend/src/api/Api.js"],"names":["axios","Auth","BASE_URL","Api","create","baseURL","interceptors","request","use","config","isLoggedIn","authHeader","getAuthorizationHeader","headers","response","r","err","indexOf","status","logout","Promise","reject","window"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,kBAAjB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,GAAjB,CAEA,GAAMC,CAAAA,GAAG,CAAGH,KAAK,CAACI,MAAN,CAAa,CACvBC,OAAO,CAAEH,QADc,CAAb,CAAZ,CAIAC,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA6B,SAACC,MAAD,CAAY,CACvC,GAAIR,IAAI,CAACS,UAAL,EAAJ,CAAuB,CACrB,GAAMC,CAAAA,UAAU,CAAGV,IAAI,CAACW,sBAAL,EAAnB,CACAH,MAAM,CAACI,OAAP,CAAe,QAAf,EAAyB,eAAzB,EAA4CF,UAA5C,CACD,CAED,MAAOF,CAAAA,MAAP,CACD,CAPD,EASAN,GAAG,CAACG,YAAJ,CAAiBQ,QAAjB,CAA0BN,GAA1B,CACE,SAACO,CAAD,QAAOA,CAAAA,CAAP,EADF,CAEE,SAACC,GAAD,CAAS,CACP,GAAIA,GAAG,CAACF,QAAJ,EAAgB,CAAC,GAAD,CAAM,GAAN,EAAWG,OAAX,CAAmBD,GAAG,CAACF,QAAJ,CAAaI,MAAhC,IAA4C,CAAC,CAAjE,CAAoE,CAClEjB,IAAI,CAACkB,MAAL,GACD,CAED,MAAOC,CAAAA,OAAO,CAACC,MAAR,CAAeL,GAAf,CAAP,CACD,CARH,EAWA;AACAM,MAAM,CAACnB,GAAP,CAAaA,GAAb,CAEA,cAAeA,CAAAA,GAAf","sourcesContent":["import axios from 'axios';\nimport Auth from '../services/Auth';\n\nconst BASE_URL = '/';\n\nconst Api = axios.create({\n  baseURL: BASE_URL,\n});\n\nApi.interceptors.request.use((config) => {\n  if (Auth.isLoggedIn()) {\n    const authHeader = Auth.getAuthorizationHeader();\n    config.headers['common']['authorization'] = authHeader;\n  }\n\n  return config;\n});\n\nApi.interceptors.response.use(\n  (r) => r,\n  (err) => {\n    if (err.response && [401, 403].indexOf(err.response.status) !== -1) {\n      Auth.logout();\n    }\n\n    return Promise.reject(err);\n  }\n);\n\n// Exporting Api into the global namespace for introspecting\nwindow.Api = Api;\n\nexport default Api;\n"]},"metadata":{},"sourceType":"module"}