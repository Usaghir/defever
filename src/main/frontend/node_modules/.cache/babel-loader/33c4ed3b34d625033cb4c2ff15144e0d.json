{"ast":null,"code":"import _regeneratorRuntime from\"/Users/umerraja/All Cloud Drives /Google Drive/Study/Study Data/Programming/Repositories/Projects/defever/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/umerraja/All Cloud Drives /Google Drive/Study/Study Data/Programming/Repositories/Projects/defever/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/umerraja/All Cloud Drives /Google Drive/Study/Study Data/Programming/Repositories/Projects/defever/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/umerraja/All Cloud Drives /Google Drive/Study/Study Data/Programming/Repositories/Projects/defever/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/umerraja/All Cloud Drives /Google Drive/Study/Study Data/Programming/Repositories/Projects/defever/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/umerraja/All Cloud Drives /Google Drive/Study/Study Data/Programming/Repositories/Projects/defever/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import CommentsApi from\"./../../api/CommentsApi\";import CommentCard from\"./CommentCard\";import CommentForm from\"./CommentForm\";import UserApi from\"../../api/UserApi\";var CommentList=/*#__PURE__*/function(_Component){_inherits(CommentList,_Component);var _super=_createSuper(CommentList);function CommentList(props){var _this;_classCallCheck(this,CommentList);_this=_super.call(this,props);_this.state={user:{},comments:[]};return _this;}_createClass(CommentList,[{key:\"createComment\",value:function(){var _createComment=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(commentData){var post,user,response,comment,newComments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(commentData!==undefined)){_context.next=15;break;}_context.prev=1;post=this.props.post;user=this.state.user;_context.next=6;return CommentsApi.createComment({body:commentData.body,date:new Date().toLocaleString(),likes:[],post:post,user:user});case 6:response=_context.sent;comment=response.data;newComments=this.state.comments.concat(comment);this.setState({comments:newComments});_context.next=15;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](1);console.error(_context.t0);case 15:case\"end\":return _context.stop();}}},_callee,this,[[1,12]]);}));function createComment(_x){return _createComment.apply(this,arguments);}return createComment;}()},{key:\"updateComment\",value:function(){var _updateComment=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(newCommentData){var post;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;post=this.props.post;_context2.next=4;return CommentsApi.updateComment({id:newCommentData.id,body:newCommentData.body,date:newCommentData.date,likes:newCommentData.likes,post:post,user:newCommentData.user});case 4:_context2.next=9;break;case 6:_context2.prev=6;_context2.t0=_context2[\"catch\"](0);console.error(_context2.t0);case 9:case\"end\":return _context2.stop();}}},_callee2,this,[[0,6]]);}));function updateComment(_x2){return _updateComment.apply(this,arguments);}return updateComment;}()},{key:\"deleteComment\",value:function(){var _deleteComment=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(comment){var newComments;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return CommentsApi.deleteComment(comment.id);case 3:newComments=this.state.comments.filter(function(c){return c.id!==comment.id;});this.setState({comments:newComments});_context3.next=10;break;case 7:_context3.prev=7;_context3.t0=_context3[\"catch\"](0);console.error(_context3.t0);case 10:case\"end\":return _context3.stop();}}},_callee3,this,[[0,7]]);}));function deleteComment(_x3){return _deleteComment.apply(this,arguments);}return deleteComment;}()},{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var postId=this.props.post.id;CommentsApi.getAllCommentsByPostId(postId).then(function(_ref){var data=_ref.data;_this2.setState({comments:data});}).catch(function(err){return console.error(err.response.data);});UserApi.current().then(function(_ref2){var data=_ref2.data;return _this2.setState({user:data});}).catch(function(err){return console.error(err);});}},{key:\"render\",value:function render(){var _this3=this;var comments=this.state.comments.sort(function(comment1,comment2){return comment1.likes<=comment2.likes?1:-1;});return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(CommentForm,{onSubmit:function onSubmit(commentData){return _this3.createComment(commentData);}}),comments.map(function(comment){return/*#__PURE__*/React.createElement(CommentCard,{key:comment.id,currentUser:_this3.state.user,comment:comment,onLikeClick:function onLikeClick(newCommentData){return _this3.updateComment(newCommentData);},onDeleteClick:function onDeleteClick(){return _this3.deleteComment(comment);}});}));}}]);return CommentList;}(Component);export default CommentList;","map":{"version":3,"sources":["/Users/umerraja/All Cloud Drives /Google Drive/Study/Study Data/Programming/Repositories/Projects/defever/src/main/frontend/src/components/comments/CommentList.js"],"names":["React","Component","CommentsApi","CommentCard","CommentForm","UserApi","CommentList","props","state","user","comments","commentData","undefined","post","createComment","body","date","Date","toLocaleString","likes","response","comment","data","newComments","concat","setState","console","error","newCommentData","updateComment","id","deleteComment","filter","c","postId","getAllCommentsByPostId","then","catch","err","current","sort","comment1","comment2","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport CommentsApi from \"./../../api/CommentsApi\";\nimport CommentCard from \"./CommentCard\";\nimport CommentForm from \"./CommentForm\";\nimport UserApi from \"../../api/UserApi\";\n\nclass CommentList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: {},\n      comments: [],\n    };\n  }\n\n  async createComment(commentData) {\n    if(commentData !== undefined) {\n      try {\n        const post = this.props.post;\n        const user = this.state.user;\n        const response = await CommentsApi.createComment({\n          body: commentData.body, date: new Date().toLocaleString(),\n          likes: [], post, user,\n        });\n        const comment = response.data;\n        const newComments = this.state.comments.concat(comment);\n  \n        this.setState({\n          comments: newComments,\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  }\n\n  async updateComment(newCommentData) {\n    try {\n      const post = this.props.post;\n      await CommentsApi.updateComment({\n        id: newCommentData.id, body: newCommentData.body, date: newCommentData.date,\n        likes: newCommentData.likes, post, user: newCommentData.user\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async deleteComment(comment) {\n    try {\n      await CommentsApi.deleteComment(comment.id);\n      const newComments = this.state.comments.filter(\n        (c) => c.id !== comment.id\n      );\n      this.setState({\n        comments: newComments,\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  componentDidMount() {\n    const postId = this.props.post.id;\n    CommentsApi.getAllCommentsByPostId(postId)\n      .then(({ data }) => {\n        this.setState({ comments: data });\n      })\n      .catch((err) => console.error(err.response.data));\n    UserApi.current()\n      .then(({ data }) => this.setState({ user: data }))\n      .catch((err) => console.error(err));\n  }\n\n  render() {\n    const comments = this.state.comments.sort((comment1, comment2) =>\n                      (comment1.likes <= comment2.likes) ? 1 : -1);\n    return (\n      <div>\n        <CommentForm\n          onSubmit={(commentData) => this.createComment(commentData)}\n        />\n        {comments.map((comment) => (\n          <CommentCard\n            key={comment.id}\n            currentUser={this.state.user}\n            comment={comment}\n            onLikeClick={(newCommentData) => this.updateComment(newCommentData)}\n            onDeleteClick={() => this.deleteComment(comment)}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default CommentList;\n"]},"metadata":{},"sourceType":"module"}