{"ast":null,"code":"import _regeneratorRuntime from\"/Users/umerraja/All Cloud Drives /Google Drive/Study/Study Data/Programming/Repositories/Projects/defever-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/umerraja/All Cloud Drives /Google Drive/Study/Study Data/Programming/Repositories/Projects/defever-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/umerraja/All Cloud Drives /Google Drive/Study/Study Data/Programming/Repositories/Projects/defever-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect,useCallback}from\"react\";var BASE_URL=\"https://corona.lmao.ninja/v2\";export function useCoronaAPI(path,_ref){var _ref$initialData=_ref.initialData,initialData=_ref$initialData===void 0?null:_ref$initialData,_ref$converter=_ref.converter,converter=_ref$converter===void 0?function(data){return data;}:_ref$converter,_ref$refetchInterval=_ref.refetchInterval,refetchInterval=_ref$refetchInterval===void 0?null:_ref$refetchInterval;var _useState=useState(initialData),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var convertData=useCallback(converter,[]);useEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(BASE_URL).concat(path));case 2:response=_context.sent;_context.next=5;return response.json();case 5:data=_context.sent;setData(convertData(data));case 7:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref2.apply(this,arguments);};}();fetchData();if(refetchInterval){var intervalId=setInterval(fetchData,refetchInterval);return function(){return clearInterval(intervalId);};}},[convertData,path,refetchInterval]);return data;}","map":{"version":3,"sources":["/Users/umerraja/All Cloud Drives /Google Drive/Study/Study Data/Programming/Repositories/Projects/defever-client/src/components/home/useCoronaAPI.js"],"names":["useState","useEffect","useCallback","BASE_URL","useCoronaAPI","path","initialData","converter","data","refetchInterval","setData","convertData","fetchData","fetch","response","json","intervalId","setInterval","clearInterval"],"mappings":"krBAAA,OAASA,QAAT,CAAmBC,SAAnB,CAA8BC,WAA9B,KAAiD,OAAjD,CAEA,GAAMC,CAAAA,QAAQ,CAAG,8BAAjB,CAEA,MAAO,SAASC,CAAAA,YAAT,CACLC,IADK,MAGL,2BADEC,WACF,CADEA,WACF,2BADgB,IAChB,sCADsBC,SACtB,CADsBA,SACtB,yBADkC,SAACC,IAAD,QAAUA,CAAAA,IAAV,EAClC,0CADkDC,eAClD,CADkDA,eAClD,+BADoE,IACpE,oCACwBT,QAAQ,CAACM,WAAD,CADhC,wCACOE,IADP,eACaE,OADb,eAEA,GAAMC,CAAAA,WAAW,CAAGT,WAAW,CAACK,SAAD,CAAY,EAAZ,CAA/B,CAEAN,SAAS,CAAC,UAAM,CACd,GAAMW,CAAAA,SAAS,2FAAG,2KACOC,CAAAA,KAAK,WAAIV,QAAJ,SAAeE,IAAf,EADZ,QACVS,QADU,qCAEGA,CAAAA,QAAQ,CAACC,IAAT,EAFH,QAEVP,IAFU,eAGhBE,OAAO,CAACC,WAAW,CAACH,IAAD,CAAZ,CAAP,CAHgB,sDAAH,kBAATI,CAAAA,SAAS,2CAAf,CAKAA,SAAS,GAET,GAAIH,eAAJ,CAAqB,CACnB,GAAMO,CAAAA,UAAU,CAAGC,WAAW,CAACL,SAAD,CAAYH,eAAZ,CAA9B,CACA,MAAO,kBAAMS,CAAAA,aAAa,CAACF,UAAD,CAAnB,EAAP,CACD,CACF,CAZQ,CAYN,CAACL,WAAD,CAAcN,IAAd,CAAoBI,eAApB,CAZM,CAAT,CAcA,MAAOD,CAAAA,IAAP,CACD","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\n\nconst BASE_URL = \"https://corona.lmao.ninja/v2\";\n\nexport function useCoronaAPI(\n  path,\n  { initialData = null, converter = (data) => data, refetchInterval = null }\n) {\n  const [data, setData] = useState(initialData);\n  const convertData = useCallback(converter, []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(`${BASE_URL}${path}`);\n      const data = await response.json();\n      setData(convertData(data));\n    };\n    fetchData();\n\n    if (refetchInterval) {\n      const intervalId = setInterval(fetchData, refetchInterval);\n      return () => clearInterval(intervalId);\n    }\n  }, [convertData, path, refetchInterval]);\n\n  return data;\n}\n"]},"metadata":{},"sourceType":"module"}