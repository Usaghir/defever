{"ast":null,"code":"import _slicedToArray from\"/Users/umerraja/All Cloud Drives /Google Drive/Study/Study Data/Programming/Repositories/Projects/defever/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _defineProperty from\"/Users/umerraja/All Cloud Drives /Google Drive/Study/Study Data/Programming/Repositories/Projects/defever/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/umerraja/All Cloud Drives /Google Drive/Study/Study Data/Programming/Repositories/Projects/defever/src/main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useReducer}from'react';import'../Components.css';import'../../App.css';import GlobalStats from'./covidWorld/GlobalStats';import CountriesChart from'./covidWorld/CountriesChart';import SelectDataKey from'./covidWorld/SelectDataKey';import{useCoronaAPI}from'./useCoronaAPI';import HistoryChartGroup from'./covidWorld/HistoryChartGroup';var initialState={key:'cases',country:null,lastDays:{cases:30,deaths:30,recovered:30}};function reducer(state,action){switch(action.type){case'SET_KEY':return _objectSpread(_objectSpread({},state),{},{key:action.key});case'SET_COUNTRY':return _objectSpread(_objectSpread({},state),{},{country:action.country});case'SET_LASTDAYS':return _objectSpread(_objectSpread({},state),{},{lastDays:_objectSpread(_objectSpread({},state.lastDays),{},_defineProperty({},action.key,action.days))});default:return state;}}export var AppDispatch=React.createContext(null);function CovidWorld(){var _useReducer=useReducer(reducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];var key=state.key,country=state.country,lastDays=state.lastDays;var globalStats=useCoronaAPI('/all',{initialData:{},refetchInterval:10000});var countries=useCoronaAPI(\"/countries?sort=\".concat(key),{initialData:[],converter:function converter(data){return data.slice(0,21);}});var history=useCoronaAPI(\"/historical/\".concat(country),{initialData:{},converter:function converter(data){return data.timeline;}});return/*#__PURE__*/React.createElement(AppDispatch.Provider,{value:dispatch},/*#__PURE__*/React.createElement(\"div\",{className:\"App pb-3\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"bebas-font\"},\"World COVID-19\"),/*#__PURE__*/React.createElement(GlobalStats,{stats:globalStats}),/*#__PURE__*/React.createElement(SelectDataKey,null),/*#__PURE__*/React.createElement(CountriesChart,{data:countries,dataKey:key}),country?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",{className:\"bebas-font\"},\"History for \",country),/*#__PURE__*/React.createElement(HistoryChartGroup,{history:history,lastDays:lastDays})):/*#__PURE__*/React.createElement(\"small\",{className:\"\"},/*#__PURE__*/React.createElement(\"p\",{className:\"bebas-font\"},\"Click on a country bar to show it's history\"))));}export default CovidWorld;","map":{"version":3,"sources":["/Users/umerraja/All Cloud Drives /Google Drive/Study/Study Data/Programming/Repositories/Projects/defever/src/main/frontend/src/components/home/CovidWorld.js"],"names":["React","useReducer","GlobalStats","CountriesChart","SelectDataKey","useCoronaAPI","HistoryChartGroup","initialState","key","country","lastDays","cases","deaths","recovered","reducer","state","action","type","days","AppDispatch","createContext","CovidWorld","dispatch","globalStats","initialData","refetchInterval","countries","converter","data","slice","history","timeline"],"mappings":"utBAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,MAAO,mBAAP,CAEA,MAAO,eAAP,CACA,MAAOC,CAAAA,WAAP,KAAwB,0BAAxB,CACA,MAAOC,CAAAA,cAAP,KAA2B,6BAA3B,CACA,MAAOC,CAAAA,aAAP,KAA0B,4BAA1B,CACA,OAASC,YAAT,KAA6B,gBAA7B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,gCAA9B,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,GAAG,CAAE,OADc,CAEnBC,OAAO,CAAE,IAFU,CAGnBC,QAAQ,CAAE,CACRC,KAAK,CAAE,EADC,CAERC,MAAM,CAAE,EAFA,CAGRC,SAAS,CAAE,EAHH,CAHS,CAArB,CAUA,QAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAwBC,MAAxB,CAAgC,CAC9B,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,SAAL,CACE,sCAAYF,KAAZ,MAAmBP,GAAG,CAAEQ,MAAM,CAACR,GAA/B,GACF,IAAK,aAAL,CACE,sCAAYO,KAAZ,MAAmBN,OAAO,CAAEO,MAAM,CAACP,OAAnC,GACF,IAAK,cAAL,CACE,sCACKM,KADL,MAEEL,QAAQ,gCAAOK,KAAK,CAACL,QAAb,wBAAwBM,MAAM,CAACR,GAA/B,CAAqCQ,MAAM,CAACE,IAA5C,EAFV,GAIF,QACE,MAAOH,CAAAA,KAAP,CAXJ,CAaD,CAED,MAAO,IAAMI,CAAAA,WAAW,CAAGnB,KAAK,CAACoB,aAAN,CAAoB,IAApB,CAApB,CAEP,QAASC,CAAAA,UAAT,EAAsB,iBACMpB,UAAU,CAACa,OAAD,CAAUP,YAAV,CADhB,4CACbQ,KADa,iBACNO,QADM,oBAEZd,CAAAA,GAFY,CAEeO,KAFf,CAEZP,GAFY,CAEPC,OAFO,CAEeM,KAFf,CAEPN,OAFO,CAEEC,QAFF,CAEeK,KAFf,CAEEL,QAFF,CAIpB,GAAMa,CAAAA,WAAW,CAAGlB,YAAY,CAAC,MAAD,CAAS,CACvCmB,WAAW,CAAE,EAD0B,CAEvCC,eAAe,CAAE,KAFsB,CAAT,CAAhC,CAKA,GAAMC,CAAAA,SAAS,CAAGrB,YAAY,2BAAoBG,GAApB,EAA2B,CACvDgB,WAAW,CAAE,EAD0C,CAEvDG,SAAS,CAAE,mBAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,KAAL,CAAW,CAAX,CAAc,EAAd,CAAV,EAF4C,CAA3B,CAA9B,CAKA,GAAMC,CAAAA,OAAO,CAAGzB,YAAY,uBAAgBI,OAAhB,EAA2B,CACrDe,WAAW,CAAE,EADwC,CAErDG,SAAS,CAAE,mBAACC,IAAD,QAAUA,CAAAA,IAAI,CAACG,QAAf,EAF0C,CAA3B,CAA5B,CAKA,mBACE,oBAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAET,QAA7B,eACE,2BAAK,SAAS,CAAC,UAAf,eACE,0BAAI,SAAS,CAAC,YAAd,mBADF,cAEE,oBAAC,WAAD,EAAa,KAAK,CAAEC,WAApB,EAFF,cAIE,oBAAC,aAAD,MAJF,cAME,oBAAC,cAAD,EAAgB,IAAI,CAAEG,SAAtB,CAAiC,OAAO,CAAElB,GAA1C,EANF,CAQGC,OAAO,cACN,4CACE,0BAAI,SAAS,CAAC,YAAd,iBAAwCA,OAAxC,CADF,cAEE,oBAAC,iBAAD,EAAmB,OAAO,CAAEqB,OAA5B,CAAqC,QAAQ,CAAEpB,QAA/C,EAFF,CADM,cAMN,6BAAO,SAAS,CAAC,EAAjB,eACE,yBAAG,SAAS,CAAC,YAAb,gDADF,CAdJ,CADF,CADF,CAyBD,CAED,cAAeW,CAAAA,UAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport '../Components.css';\n\nimport '../../App.css';\nimport GlobalStats from './covidWorld/GlobalStats';\nimport CountriesChart from './covidWorld/CountriesChart';\nimport SelectDataKey from './covidWorld/SelectDataKey';\nimport { useCoronaAPI } from './useCoronaAPI';\nimport HistoryChartGroup from './covidWorld/HistoryChartGroup';\n\nconst initialState = {\n  key: 'cases',\n  country: null,\n  lastDays: {\n    cases: 30,\n    deaths: 30,\n    recovered: 30,\n  },\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'SET_KEY':\n      return { ...state, key: action.key };\n    case 'SET_COUNTRY':\n      return { ...state, country: action.country };\n    case 'SET_LASTDAYS':\n      return {\n        ...state,\n        lastDays: { ...state.lastDays, [action.key]: action.days },\n      };\n    default:\n      return state;\n  }\n}\n\nexport const AppDispatch = React.createContext(null);\n\nfunction CovidWorld() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { key, country, lastDays } = state;\n\n  const globalStats = useCoronaAPI('/all', {\n    initialData: {},\n    refetchInterval: 10000,\n  });\n\n  const countries = useCoronaAPI(`/countries?sort=${key}`, {\n    initialData: [],\n    converter: (data) => data.slice(0, 21),\n  });\n\n  const history = useCoronaAPI(`/historical/${country}`, {\n    initialData: {},\n    converter: (data) => data.timeline,\n  });\n\n  return (\n    <AppDispatch.Provider value={dispatch}>\n      <div className=\"App pb-3\">\n        <h1 className=\"bebas-font\">World COVID-19</h1>\n        <GlobalStats stats={globalStats} />\n\n        <SelectDataKey />\n\n        <CountriesChart data={countries} dataKey={key} />\n\n        {country ? (\n          <div>\n            <h2 className=\"bebas-font\">History for {country}</h2>\n            <HistoryChartGroup history={history} lastDays={lastDays} />\n          </div>\n        ) : (\n          <small className=\"\">\n            <p className=\"bebas-font\">\n              Click on a country bar to show it's history\n            </p>\n          </small>\n        )}\n      </div>\n    </AppDispatch.Provider>\n  );\n}\n\nexport default CovidWorld;\n"]},"metadata":{},"sourceType":"module"}