{"ast":null,"code":"import axios from 'axios';\nimport Auth from '../services/Auth';\nconst BASE_URL = '/';\nconst Api = axios.create({\n  baseURL: BASE_URL\n});\nApi.interceptors.request.use(config => {\n  if (Auth.isLoggedIn()) {\n    const authHeader = Auth.getAuthorizationHeader();\n    config.headers['common']['authorization'] = authHeader;\n  }\n\n  return config;\n});\nApi.interceptors.response.use(r => r, err => {\n  if (err.response && [401, 403].indexOf(err.response.status) !== -1) {\n    Auth.logout();\n  }\n\n  return Promise.reject(err);\n}); // Exporting Api into the global namespace for introspecting\n\nwindow.Api = Api;\nexport default Api;","map":{"version":3,"sources":["/Users/umerraja/All Cloud Drives /Google Drive/Study/Study Data/Programming/Repositories/Projects/defever/frontend/src/api/Api.js"],"names":["axios","Auth","BASE_URL","Api","create","baseURL","interceptors","request","use","config","isLoggedIn","authHeader","getAuthorizationHeader","headers","response","r","err","indexOf","status","logout","Promise","reject","window"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AAEA,MAAMC,QAAQ,GAAG,GAAjB;AAEA,MAAMC,GAAG,GAAGH,KAAK,CAACI,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAEH;AADc,CAAb,CAAZ;AAIAC,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA8BC,MAAD,IAAY;AACvC,MAAIR,IAAI,CAACS,UAAL,EAAJ,EAAuB;AACrB,UAAMC,UAAU,GAAGV,IAAI,CAACW,sBAAL,EAAnB;AACAH,IAAAA,MAAM,CAACI,OAAP,CAAe,QAAf,EAAyB,eAAzB,IAA4CF,UAA5C;AACD;;AAED,SAAOF,MAAP;AACD,CAPD;AASAN,GAAG,CAACG,YAAJ,CAAiBQ,QAAjB,CAA0BN,GAA1B,CACGO,CAAD,IAAOA,CADT,EAEGC,GAAD,IAAS;AACP,MAAIA,GAAG,CAACF,QAAJ,IAAgB,CAAC,GAAD,EAAM,GAAN,EAAWG,OAAX,CAAmBD,GAAG,CAACF,QAAJ,CAAaI,MAAhC,MAA4C,CAAC,CAAjE,EAAoE;AAClEjB,IAAAA,IAAI,CAACkB,MAAL;AACD;;AAED,SAAOC,OAAO,CAACC,MAAR,CAAeL,GAAf,CAAP;AACD,CARH,E,CAWA;;AACAM,MAAM,CAACnB,GAAP,GAAaA,GAAb;AAEA,eAAeA,GAAf","sourcesContent":["import axios from 'axios';\nimport Auth from '../services/Auth';\n\nconst BASE_URL = '/';\n\nconst Api = axios.create({\n  baseURL: BASE_URL,\n});\n\nApi.interceptors.request.use((config) => {\n  if (Auth.isLoggedIn()) {\n    const authHeader = Auth.getAuthorizationHeader();\n    config.headers['common']['authorization'] = authHeader;\n  }\n\n  return config;\n});\n\nApi.interceptors.response.use(\n  (r) => r,\n  (err) => {\n    if (err.response && [401, 403].indexOf(err.response.status) !== -1) {\n      Auth.logout();\n    }\n\n    return Promise.reject(err);\n  }\n);\n\n// Exporting Api into the global namespace for introspecting\nwindow.Api = Api;\n\nexport default Api;\n"]},"metadata":{},"sourceType":"module"}