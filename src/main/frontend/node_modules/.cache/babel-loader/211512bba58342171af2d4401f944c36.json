{"ast":null,"code":"var _jsxFileName = \"/Users/umerraja/All Cloud Drives /Google Drive/Study/Study Data/Programming/Repositories/Projects/defever/frontend/src/components/chat/Chat.js\";\nimport React, { Component } from 'react';\nimport SockJS from 'sockjs-client';\nimport Stomp from 'stompjs';\nimport './Chat.css';\nimport Online from './Online';\nimport ChatRoom from './ChatRoom';\nimport UserApi from '../../api/UserApi';\nimport { Button, Avatar } from '@material-ui/core';\nimport ChatApi from '../../api/ChatApi';\nlet stompClient = null;\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      messageContent: '',\n      messages: [],\n      users: [],\n      time: new Date().toLocaleString(),\n      user: {},\n      chats: []\n    };\n\n    this.handleMessage = event => {\n      this.setState({\n        messageContent: event.target.value\n      });\n    };\n\n    this.handleChatSubmit = event => {\n      this.setState({\n        messageContent: event.target.value\n      });\n      this.send(event);\n      event.preventDefault();\n    };\n\n    this.connect = event => {\n      let socket = new SockJS('http://localhost:8080/ws');\n      stompClient = Stomp.over(socket);\n      stompClient.connect({}, this.onConnected, this.onError);\n    };\n\n    this.onConnected = () => {\n      stompClient.subscribe('/topic/public', this.onMessageReceived);\n      stompClient.send('/app/chat.register', {}, JSON.stringify({\n        sender: this.state.username,\n        type: 'JOIN'\n      }));\n    };\n\n    this.onError = error => {\n      console.log(error);\n    };\n\n    this.send = event => {\n      if (this.state.messageContent && stompClient) {\n        let chatMessage = {\n          sender: this.state.username,\n          content: this.state.messageContent,\n          type: 'CHAT'\n        };\n        stompClient.send('/app/chat.send', {}, JSON.stringify(chatMessage));\n        this.setState({\n          messageContent: ''\n        });\n      }\n\n      event.preventDefault();\n    };\n\n    this.onMessageReceived = payload => {\n      console.log(this.state.messages);\n      var newMessage = JSON.parse(payload.body);\n      console.log(newMessage);\n      var allMessage = this.state.chats.concat(newMessage);\n      console.log(message);\n      var message = allMessage[1];\n      console.log(message);\n      allMessage.forEach((message, index, arr) => {\n        if (message.type === 'JOIN') {\n          this.setState({\n            messages: [...this.state.messages, message.sender + ' has joined']\n          });\n          this.setState({\n            users: [...this.state.users, message.sender]\n          });\n        } else if (message.type === 'CHAT') {\n          this.setState({\n            messages: [...this.state.messages, message.sender + '  : ' + message.content]\n          });\n        } else if (message.type === 'LEAVE') {\n          this.setState({\n            messages: [...this.state.messages, message.sender + ' has Left']\n          });\n        }\n      });\n      console.log(this.state.messages);\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Online, {\n        onlineUsers: this.state.users,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ChatRoom, {\n        chatArea: this.state.messages.filter((v, i) => this.state.messages.indexOf(v) === i).map((mess, index) => {\n          console.log(mess);\n          mess.includes('joined') ? /*#__PURE__*/React.createElement(\"li\", {\n            key: index,\n            className: \"shadow-lg p-3 mb-2 text-center bg-white text-success rounded text-break\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"badge badge-primary text-wrap\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }\n          }, mess)) : /*#__PURE__*/React.createElement(\"li\", {\n            key: index,\n            className: \"row justify-content-between shadow-lg p-3 mb-2 bg-white  rounded text-break\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(Avatar, {\n            className: \"bg-primary mr-3\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 21\n            }\n          }, mess[0]), /*#__PURE__*/React.createElement(\"h5\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 21\n            }\n          }, mess)), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"badge text-wrap \",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }\n          }, this.state.time));\n        }),\n        chatSubmit: this.handleChatSubmit,\n        valueChat: this.state.messageContent,\n        chatChange: this.handleMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    this.handleMessage = this.handleMessage.bind(this);\n    this.handleChatSubmit = this.handleChatSubmit.bind(this);\n    this.connect = this.connect.bind(this);\n    this.send = this.send.bind(this);\n    this.onConnected = this.onConnected.bind(this);\n    this.onMessageReceived = this.onMessageReceived.bind(this);\n  }\n\n  /*  componentDidMount() {\n    UserApi.current()\n      .then(({ data }) => {\n        this.setState({ username: data.name });\n        console.log(data);\n      })\n      .catch((err) => console.error(err));\n    this.connect();\n  } */\n  componentDidMount() {\n    ChatApi.getAllChat().then(({\n      data\n    }) => {\n      this.setState({\n        chats: data\n      });\n      console.log(this.state.chats);\n    }).catch(err => console.error(err));\n    UserApi.current().then(({\n      data\n    }) => {\n      this.setState({\n        user: data\n      });\n      console.log(this.state.user);\n    }).catch(err => console.error(err));\n    console.log(this.state.user);\n    this.connect();\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["/Users/umerraja/All Cloud Drives /Google Drive/Study/Study Data/Programming/Repositories/Projects/defever/frontend/src/components/chat/Chat.js"],"names":["React","Component","SockJS","Stomp","Online","ChatRoom","UserApi","Button","Avatar","ChatApi","stompClient","Chat","constructor","props","state","username","messageContent","messages","users","time","Date","toLocaleString","user","chats","handleMessage","event","setState","target","value","handleChatSubmit","send","preventDefault","connect","socket","over","onConnected","onError","subscribe","onMessageReceived","JSON","stringify","sender","type","error","console","log","chatMessage","content","payload","newMessage","parse","body","allMessage","concat","message","forEach","index","arr","render","filter","v","i","indexOf","map","mess","includes","bind","componentDidMount","getAllChat","then","data","catch","err","current"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,mBAA/B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,IAAIC,WAAW,GAAG,IAAlB;;AACA,MAAMC,IAAN,SAAmBV,SAAnB,CAA6B;AAC3BW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAUnBC,KAVmB,GAUX;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,cAAc,EAAE,EAFV;AAGNC,MAAAA,QAAQ,EAAE,EAHJ;AAINC,MAAAA,KAAK,EAAE,EAJD;AAKNC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,cAAX,EALA;AAONC,MAAAA,IAAI,EAAE,EAPA;AAQNC,MAAAA,KAAK,EAAE;AARD,KAVW;;AAAA,SAkDnBC,aAlDmB,GAkDFC,KAAD,IAAW;AACzB,WAAKC,QAAL,CAAc;AAAEV,QAAAA,cAAc,EAAES,KAAK,CAACE,MAAN,CAAaC;AAA/B,OAAd;AACD,KApDkB;;AAAA,SAsDnBC,gBAtDmB,GAsDCJ,KAAD,IAAW;AAC5B,WAAKC,QAAL,CAAc;AAAEV,QAAAA,cAAc,EAAES,KAAK,CAACE,MAAN,CAAaC;AAA/B,OAAd;AACA,WAAKE,IAAL,CAAUL,KAAV;AACAA,MAAAA,KAAK,CAACM,cAAN;AACD,KA1DkB;;AAAA,SA4DnBC,OA5DmB,GA4DRP,KAAD,IAAW;AACnB,UAAIQ,MAAM,GAAG,IAAI/B,MAAJ,CAAW,0BAAX,CAAb;AACAQ,MAAAA,WAAW,GAAGP,KAAK,CAAC+B,IAAN,CAAWD,MAAX,CAAd;AACAvB,MAAAA,WAAW,CAACsB,OAAZ,CAAoB,EAApB,EAAwB,KAAKG,WAA7B,EAA0C,KAAKC,OAA/C;AACD,KAhEkB;;AAAA,SAkEnBD,WAlEmB,GAkEL,MAAM;AAClBzB,MAAAA,WAAW,CAAC2B,SAAZ,CAAsB,eAAtB,EAAuC,KAAKC,iBAA5C;AAEA5B,MAAAA,WAAW,CAACoB,IAAZ,CACE,oBADF,EAEE,EAFF,EAGES,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,MAAM,EAAE,KAAK3B,KAAL,CAAWC,QAArB;AAA+B2B,QAAAA,IAAI,EAAE;AAArC,OAAf,CAHF;AAKD,KA1EkB;;AAAA,SA2EnBN,OA3EmB,GA2ERO,KAAD,IAAW;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KA7EkB;;AAAA,SA+EnBb,IA/EmB,GA+EXL,KAAD,IAAW;AAChB,UAAI,KAAKX,KAAL,CAAWE,cAAX,IAA6BN,WAAjC,EAA8C;AAC5C,YAAIoC,WAAW,GAAG;AAChBL,UAAAA,MAAM,EAAE,KAAK3B,KAAL,CAAWC,QADH;AAEhBgC,UAAAA,OAAO,EAAE,KAAKjC,KAAL,CAAWE,cAFJ;AAGhB0B,UAAAA,IAAI,EAAE;AAHU,SAAlB;AAMAhC,QAAAA,WAAW,CAACoB,IAAZ,CAAiB,gBAAjB,EAAmC,EAAnC,EAAuCS,IAAI,CAACC,SAAL,CAAeM,WAAf,CAAvC;AACA,aAAKpB,QAAL,CAAc;AAAEV,UAAAA,cAAc,EAAE;AAAlB,SAAd;AACD;;AACDS,MAAAA,KAAK,CAACM,cAAN;AACD,KA3FkB;;AAAA,SA6FnBO,iBA7FmB,GA6FEU,OAAD,IAAa;AAC/BJ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK/B,KAAL,CAAWG,QAAvB;AACA,UAAIgC,UAAU,GAAGV,IAAI,CAACW,KAAL,CAAWF,OAAO,CAACG,IAAnB,CAAjB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYI,UAAZ;AACA,UAAIG,UAAU,GAAG,KAAKtC,KAAL,CAAWS,KAAX,CAAiB8B,MAAjB,CAAwBJ,UAAxB,CAAjB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYS,OAAZ;AACA,UAAIA,OAAO,GAAGF,UAAU,CAAC,CAAD,CAAxB;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAYS,OAAZ;AACAF,MAAAA,UAAU,CAACG,OAAX,CAAmB,CAACD,OAAD,EAAUE,KAAV,EAAiBC,GAAjB,KAAyB;AAC1C,YAAIH,OAAO,CAACZ,IAAR,KAAiB,MAArB,EAA6B;AAC3B,eAAKhB,QAAL,CAAc;AACZT,YAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKH,KAAL,CAAWG,QAAf,EAAyBqC,OAAO,CAACb,MAAR,GAAiB,aAA1C;AADE,WAAd;AAIA,eAAKf,QAAL,CAAc;AACZR,YAAAA,KAAK,EAAE,CAAC,GAAG,KAAKJ,KAAL,CAAWI,KAAf,EAAsBoC,OAAO,CAACb,MAA9B;AADK,WAAd;AAGD,SARD,MAQO,IAAIa,OAAO,CAACZ,IAAR,KAAiB,MAArB,EAA6B;AAClC,eAAKhB,QAAL,CAAc;AACZT,YAAAA,QAAQ,EAAE,CACR,GAAG,KAAKH,KAAL,CAAWG,QADN,EAERqC,OAAO,CAACb,MAAR,GAAiB,MAAjB,GAA0Ba,OAAO,CAACP,OAF1B;AADE,WAAd;AAMD,SAPM,MAOA,IAAIO,OAAO,CAACZ,IAAR,KAAiB,OAArB,EAA8B;AACnC,eAAKhB,QAAL,CAAc;AACZT,YAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKH,KAAL,CAAWG,QAAf,EAAyBqC,OAAO,CAACb,MAAR,GAAiB,WAA1C;AADE,WAAd;AAGD;AACF,OArBD;AAsBAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK/B,KAAL,CAAWG,QAAvB;AACD,KA5HkB;;AAAA,SA8HnByC,MA9HmB,GA8HV,MAAM;AACb,0BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAQ,QAAA,WAAW,EAAE,KAAK5C,KAAL,CAAWI,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE,oBAAC,QAAD;AACE,QAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWG,QAAX,CACP0C,MADO,CACA,CAACC,CAAD,EAAIC,CAAJ,KAAU,KAAK/C,KAAL,CAAWG,QAAX,CAAoB6C,OAApB,CAA4BF,CAA5B,MAAmCC,CAD7C,EAEPE,GAFO,CAEH,CAACC,IAAD,EAAOR,KAAP,KAAiB;AACpBZ,UAAAA,OAAO,CAACC,GAAR,CAAYmB,IAAZ;AACAA,UAAAA,IAAI,CAACC,QAAL,CAAc,QAAd,iBACE;AACE,YAAA,GAAG,EAAET,KADP;AAEE,YAAA,SAAS,EAAC,yEAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAIE;AAAK,YAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAgDQ,IAAhD,CAJF,CADF,gBAQE;AACE,YAAA,GAAG,EAAER,KADP;AAEE,YAAA,SAAS,EAAC,6EAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE,oBAAC,MAAD;AAAQ,YAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAqCQ,IAAI,CAAC,CAAD,CAAzC,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKA,IAAL,CAFF,CAJF,eAQE;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAmC,KAAKlD,KAAL,CAAWK,IAA9C,CARF,CARF;AAmBD,SAvBO,CADZ;AAyBE,QAAA,UAAU,EAAE,KAAKU,gBAzBnB;AA0BE,QAAA,SAAS,EAAE,KAAKf,KAAL,CAAWE,cA1BxB;AA2BE,QAAA,UAAU,EAAE,KAAKQ,aA3BnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAkCD,KAjKkB;;AAEjB,SAAKA,aAAL,GAAqB,KAAKA,aAAL,CAAmB0C,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKrC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBqC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKlC,OAAL,GAAe,KAAKA,OAAL,CAAakC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKpC,IAAL,GAAY,KAAKA,IAAL,CAAUoC,IAAV,CAAe,IAAf,CAAZ;AACA,SAAK/B,WAAL,GAAmB,KAAKA,WAAL,CAAiB+B,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAK5B,iBAAL,GAAyB,KAAKA,iBAAL,CAAuB4B,IAAvB,CAA4B,IAA5B,CAAzB;AACD;;AAaD;;;;;;;;;AAUAC,EAAAA,iBAAiB,GAAG;AAClB1D,IAAAA,OAAO,CAAC2D,UAAR,GACGC,IADH,CACQ,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AAClB,WAAK5C,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAE+C;AAAT,OAAd;AACA1B,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK/B,KAAL,CAAWS,KAAvB;AACD,KAJH,EAKGgD,KALH,CAKUC,GAAD,IAAS5B,OAAO,CAACD,KAAR,CAAc6B,GAAd,CALlB;AAOAlE,IAAAA,OAAO,CAACmE,OAAR,GACGJ,IADH,CACQ,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AAClB,WAAK5C,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAEgD;AAAR,OAAd;AACA1B,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK/B,KAAL,CAAWQ,IAAvB;AACD,KAJH,EAKGiD,KALH,CAKUC,GAAD,IAAS5B,OAAO,CAACD,KAAR,CAAc6B,GAAd,CALlB;AAOA5B,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK/B,KAAL,CAAWQ,IAAvB;AACA,SAAKU,OAAL;AACD;;AAjD0B;;AAqK7B,eAAerB,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport SockJS from 'sockjs-client';\nimport Stomp from 'stompjs';\nimport './Chat.css';\nimport Online from './Online';\nimport ChatRoom from './ChatRoom';\nimport UserApi from '../../api/UserApi';\nimport { Button, Avatar } from '@material-ui/core';\nimport ChatApi from '../../api/ChatApi';\n\nlet stompClient = null;\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.handleMessage = this.handleMessage.bind(this);\n    this.handleChatSubmit = this.handleChatSubmit.bind(this);\n    this.connect = this.connect.bind(this);\n    this.send = this.send.bind(this);\n    this.onConnected = this.onConnected.bind(this);\n    this.onMessageReceived = this.onMessageReceived.bind(this);\n  }\n\n  state = {\n    username: '',\n    messageContent: '',\n    messages: [],\n    users: [],\n    time: new Date().toLocaleString(),\n\n    user: {},\n    chats: [],\n  };\n\n  /*  componentDidMount() {\n    UserApi.current()\n      .then(({ data }) => {\n        this.setState({ username: data.name });\n        console.log(data);\n      })\n      .catch((err) => console.error(err));\n    this.connect();\n  } */\n\n  componentDidMount() {\n    ChatApi.getAllChat()\n      .then(({ data }) => {\n        this.setState({ chats: data });\n        console.log(this.state.chats);\n      })\n      .catch((err) => console.error(err));\n\n    UserApi.current()\n      .then(({ data }) => {\n        this.setState({ user: data });\n        console.log(this.state.user);\n      })\n      .catch((err) => console.error(err));\n\n    console.log(this.state.user);\n    this.connect();\n  }\n\n  handleMessage = (event) => {\n    this.setState({ messageContent: event.target.value });\n  };\n\n  handleChatSubmit = (event) => {\n    this.setState({ messageContent: event.target.value });\n    this.send(event);\n    event.preventDefault();\n  };\n\n  connect = (event) => {\n    let socket = new SockJS('http://localhost:8080/ws');\n    stompClient = Stomp.over(socket);\n    stompClient.connect({}, this.onConnected, this.onError);\n  };\n\n  onConnected = () => {\n    stompClient.subscribe('/topic/public', this.onMessageReceived);\n\n    stompClient.send(\n      '/app/chat.register',\n      {},\n      JSON.stringify({ sender: this.state.username, type: 'JOIN' })\n    );\n  };\n  onError = (error) => {\n    console.log(error);\n  };\n\n  send = (event) => {\n    if (this.state.messageContent && stompClient) {\n      let chatMessage = {\n        sender: this.state.username,\n        content: this.state.messageContent,\n        type: 'CHAT',\n      };\n\n      stompClient.send('/app/chat.send', {}, JSON.stringify(chatMessage));\n      this.setState({ messageContent: '' });\n    }\n    event.preventDefault();\n  };\n\n  onMessageReceived = (payload) => {\n    console.log(this.state.messages);\n    var newMessage = JSON.parse(payload.body);\n    console.log(newMessage);\n    var allMessage = this.state.chats.concat(newMessage);\n    console.log(message);\n    var message = allMessage[1];\n    console.log(message);\n    allMessage.forEach((message, index, arr) => {\n      if (message.type === 'JOIN') {\n        this.setState({\n          messages: [...this.state.messages, message.sender + ' has joined'],\n        });\n\n        this.setState({\n          users: [...this.state.users, message.sender],\n        });\n      } else if (message.type === 'CHAT') {\n        this.setState({\n          messages: [\n            ...this.state.messages,\n            message.sender + '  : ' + message.content,\n          ],\n        });\n      } else if (message.type === 'LEAVE') {\n        this.setState({\n          messages: [...this.state.messages, message.sender + ' has Left'],\n        });\n      }\n    });\n    console.log(this.state.messages);\n  };\n\n  render = () => {\n    return (\n      <div className=\"row\">\n        <Online onlineUsers={this.state.users} />\n        <ChatRoom\n          chatArea={this.state.messages\n            .filter((v, i) => this.state.messages.indexOf(v) === i)\n            .map((mess, index) => {\n              console.log(mess);\n              mess.includes('joined') ? (\n                <li\n                  key={index}\n                  className=\"shadow-lg p-3 mb-2 text-center bg-white text-success rounded text-break\"\n                >\n                  <div className=\"badge badge-primary text-wrap\">{mess}</div>\n                </li>\n              ) : (\n                <li\n                  key={index}\n                  className=\"row justify-content-between shadow-lg p-3 mb-2 bg-white  rounded text-break\"\n                >\n                  <div>\n                    <Avatar className=\"bg-primary mr-3\">{mess[0]}</Avatar>\n                    <h5>{mess}</h5>\n                  </div>\n                  <div className=\"badge text-wrap \">{this.state.time}</div>\n                </li>\n              );\n            })}\n          chatSubmit={this.handleChatSubmit}\n          valueChat={this.state.messageContent}\n          chatChange={this.handleMessage}\n        />\n      </div>\n    );\n  };\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}