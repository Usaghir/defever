{"ast":null,"code":"import _toConsumableArray from\"/Users/umerraja/All Cloud Drives /Google Drive/Study/Study Data/Programming/Repositories/Projects/defever-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/umerraja/All Cloud Drives /Google Drive/Study/Study Data/Programming/Repositories/Projects/defever-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/umerraja/All Cloud Drives /Google Drive/Study/Study Data/Programming/Repositories/Projects/defever-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/umerraja/All Cloud Drives /Google Drive/Study/Study Data/Programming/Repositories/Projects/defever-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/umerraja/All Cloud Drives /Google Drive/Study/Study Data/Programming/Repositories/Projects/defever-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/umerraja/All Cloud Drives /Google Drive/Study/Study Data/Programming/Repositories/Projects/defever-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import SockJS from'sockjs-client';import Stomp from'stompjs';import'./Chat.css';import Online from'./Online';import ChatRoom from'./ChatRoom';import UserApi from'../../api/UserApi';import ChatApi from'../../api/ChatApi';import{Avatar}from'@material-ui/core';import'../Components.css';var stompClient=null;var Chat=/*#__PURE__*/function(_Component){_inherits(Chat,_Component);var _super=_createSuper(Chat);function Chat(props){var _this;_classCallCheck(this,Chat);_this=_super.call(this,props);_this.state={username:'',messageContent:'',messages:[],users:[],chats:[],time:new Date().toLocaleString()};_this.handleMessage=function(event){_this.setState({messageContent:event.target.value});};_this.handleChatSubmit=function(event){_this.send(event);event.preventDefault();};_this.connect=function(event){var socket=new SockJS('/ws');stompClient=Stomp.over(socket);stompClient.connect({},_this.onConnected,_this.onError);};_this.onConnected=function(){stompClient.subscribe('/topic/public',_this.onMessageReceived);stompClient.send('/app/chat.register',{},JSON.stringify({sender:_this.state.username,type:'JOIN'}));};_this.onError=function(error){console.log(error);};_this.send=function(event){if(_this.state.messageContent&&stompClient){var chatMessage={sender:_this.state.username,content:_this.state.messageContent,type:'CHAT'};stompClient.send('/app/chat.send',{},JSON.stringify(chatMessage));_this.setState({messageContent:''});}event.preventDefault();};_this.onMessageReceived=function(payload){var message=JSON.parse(payload.body);if(message.type==='JOIN'/* &&\n      !this.state.messages.includes(message.sender + ' has joined') */){_this.setState({messages:[].concat(_toConsumableArray(_this.state.messages),[message.sender+' has joined'])});_this.setState({users:[].concat(_toConsumableArray(_this.state.users),[message.sender])});}else if(message.type==='CHAT'){_this.setState({messages:[].concat(_toConsumableArray(_this.state.messages),[message.sender.toUpperCase()+'  : '+message.content])});_this.setState({users:[].concat(_toConsumableArray(_this.state.users),[message.sender])});}else if(message.type==='LEAVE'){_this.setState({messages:[].concat(_toConsumableArray(_this.state.messages),[message.sender+' Left'])});}};_this.render=function(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(Online,{onlineUsers:_toConsumableArray(new Set(_this.state.users)).filter(function(el){return el!=null;})}),/*#__PURE__*/React.createElement(ChatRoom,{chatArea:_this.state.messages.map(function(mess,index){return mess.includes('joined')?/*#__PURE__*/React.createElement(\"li\",{key:index,className:\"shadow-lg p-3 mb-2 text-center bg-white text-success  text-break\"},/*#__PURE__*/React.createElement(\"div\",{className:\"badge badge-success text-wrap bebas-font\"},mess)):/*#__PURE__*/React.createElement(\"li\",{key:index,className:\"row justify-content-between shadow-lg p-3 mb-2 bg-white   text-break\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Avatar,{className:\"bg-primary\"}),/*#__PURE__*/React.createElement(\"h5\",{className:\"font-weight-bold\"},mess)),/*#__PURE__*/React.createElement(\"em\",{className:\"mr-4 mt-2\",style:{color:'#3a3b3c',fontSize:'10px'}},_this.state.time));}),chatSubmit:_this.handleChatSubmit,valueChat:_this.state.messageContent,chatChange:_this.handleMessage})));};_this.handleMessage=_this.handleMessage.bind(_assertThisInitialized(_this));_this.handleChatSubmit=_this.handleChatSubmit.bind(_assertThisInitialized(_this));_this.connect=_this.connect.bind(_assertThisInitialized(_this));_this.send=_this.send.bind(_assertThisInitialized(_this));_this.onConnected=_this.onConnected.bind(_assertThisInitialized(_this));_this.onMessageReceived=_this.onMessageReceived.bind(_assertThisInitialized(_this));return _this;}_createClass(Chat,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;ChatApi.getAllChats().then(function(_ref){var data=_ref.data;data.map(function(dat){if(dat.type==='CHAT'){_this2.setState({messages:[].concat(_toConsumableArray(_this2.state.messages),[dat.sender+'  : '+dat.content])});}});}).catch(function(err){return console.error(err);});UserApi.current().then(function(_ref2){var data=_ref2.data;_this2.setState({username:data.name});}).catch(function(err){return console.error(err);});this.connect();}}]);return Chat;}(Component);export default Chat;","map":{"version":3,"sources":["/Users/umerraja/All Cloud Drives /Google Drive/Study/Study Data/Programming/Repositories/Projects/defever-client/src/components/chat/Chat.js"],"names":["React","Component","SockJS","Stomp","Online","ChatRoom","UserApi","ChatApi","Avatar","stompClient","Chat","props","state","username","messageContent","messages","users","chats","time","Date","toLocaleString","handleMessage","event","setState","target","value","handleChatSubmit","send","preventDefault","connect","socket","over","onConnected","onError","subscribe","onMessageReceived","JSON","stringify","sender","type","error","console","log","chatMessage","content","payload","message","parse","body","toUpperCase","render","Set","filter","el","map","mess","index","includes","color","fontSize","bind","getAllChats","then","data","dat","catch","err","current","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SockJS from 'sockjs-client';\nimport Stomp from 'stompjs';\nimport './Chat.css';\nimport Online from './Online';\nimport ChatRoom from './ChatRoom';\nimport UserApi from '../../api/UserApi';\nimport ChatApi from '../../api/ChatApi';\nimport { Avatar } from '@material-ui/core';\nimport '../Components.css';\n\nlet stompClient = null;\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.handleMessage = this.handleMessage.bind(this);\n    this.handleChatSubmit = this.handleChatSubmit.bind(this);\n    this.connect = this.connect.bind(this);\n    this.send = this.send.bind(this);\n    this.onConnected = this.onConnected.bind(this);\n    this.onMessageReceived = this.onMessageReceived.bind(this);\n  }\n\n  state = {\n    username: '',\n    messageContent: '',\n    messages: [],\n    users: [],\n    chats: [],\n    time: new Date().toLocaleString(),\n  };\n\n  componentDidMount() {\n    ChatApi.getAllChats()\n      .then(({ data }) => {\n        data.map((dat) => {\n          if (dat.type === 'CHAT') {\n            this.setState({\n              messages: [\n                ...this.state.messages,\n                dat.sender + '  : ' + dat.content,\n              ],\n            });\n          }\n        });\n      })\n      .catch((err) => console.error(err));\n\n    UserApi.current()\n      .then(({ data }) => {\n        this.setState({ username: data.name });\n      })\n      .catch((err) => console.error(err));\n    this.connect();\n  }\n\n  handleMessage = (event) => {\n    this.setState({ messageContent: event.target.value });\n  };\n\n  handleChatSubmit = (event) => {\n    this.send(event);\n    event.preventDefault();\n  };\n\n  connect = (event) => {\n    let socket = new SockJS('/ws');\n    stompClient = Stomp.over(socket);\n    stompClient.connect({}, this.onConnected, this.onError);\n  };\n\n  onConnected = () => {\n    stompClient.subscribe('/topic/public', this.onMessageReceived);\n\n    stompClient.send(\n      '/app/chat.register',\n      {},\n      JSON.stringify({ sender: this.state.username, type: 'JOIN' })\n    );\n  };\n  onError = (error) => {\n    console.log(error);\n  };\n\n  send = (event) => {\n    if (this.state.messageContent && stompClient) {\n      let chatMessage = {\n        sender: this.state.username,\n        content: this.state.messageContent,\n        type: 'CHAT',\n      };\n\n      stompClient.send('/app/chat.send', {}, JSON.stringify(chatMessage));\n      this.setState({ messageContent: '' });\n    }\n    event.preventDefault();\n  };\n\n  onMessageReceived = (payload) => {\n    var message = JSON.parse(payload.body);\n\n    if (\n      message.type ===\n      'JOIN' /* &&\n      !this.state.messages.includes(message.sender + ' has joined') */\n    ) {\n      this.setState({\n        messages: [...this.state.messages, message.sender + ' has joined'],\n      });\n      this.setState({\n        users: [...this.state.users, message.sender],\n      });\n    } else if (message.type === 'CHAT') {\n      this.setState({\n        messages: [\n          ...this.state.messages,\n          message.sender.toUpperCase() + '  : ' + message.content,\n        ],\n      });\n      this.setState({\n        users: [...this.state.users, message.sender],\n      });\n    } else if (message.type === 'LEAVE') {\n      this.setState({\n        messages: [...this.state.messages, message.sender + ' Left'],\n      });\n    }\n  };\n\n  render = () => {\n    return (\n      <div>\n        <div className=\"row\">\n          <Online\n            onlineUsers={[...new Set(this.state.users)].filter(function (el) {\n              return el != null;\n            })}\n          />\n\n          <ChatRoom\n            chatArea={this.state.messages.map((mess, index) =>\n              mess.includes('joined') ? (\n                <li\n                  key={index}\n                  className=\"shadow-lg p-3 mb-2 text-center bg-white text-success  text-break\"\n                >\n                  <div className=\"badge badge-success text-wrap bebas-font\">\n                    {mess}\n                  </div>\n                </li>\n              ) : (\n                <li\n                  key={index}\n                  className=\"row justify-content-between shadow-lg p-3 mb-2 bg-white   text-break\"\n                >\n                  <div>\n                    <Avatar className=\"bg-primary\"></Avatar>\n                    <h5 className=\"font-weight-bold\">{mess}</h5>\n                  </div>\n                  <em\n                    className=\"mr-4 mt-2\"\n                    style={{ color: '#3a3b3c', fontSize: '10px' }}\n                  >\n                    {this.state.time}\n                  </em>\n                </li>\n              )\n            )}\n            chatSubmit={this.handleChatSubmit}\n            valueChat={this.state.messageContent}\n            chatChange={this.handleMessage}\n          />\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}